name: test

on: [push]

jobs:
  build:
    if: ${{!startsWith(github.ref, 'refs/tags/')}}
    strategy:
      fail-fast: false
      matrix:
          os: [ubuntu-18.04, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install ubuntu deps
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config build-essential
          sudo apt-get install cmake make
          sudo apt-get install mesa-common-dev libglu1-mesa-dev

      - name: Remove cached nodegui Qt
        if: contains(matrix.os, 'ubuntu')
        run: rm -rf ~/.cache/nodegui-mini-qt-nodejs || true

      - name: Remove cached nodegui Qt
        if: contains(matrix.os, 'macos')
        run: rm -rf /Users/runner/Library/Caches/nodegui-mini-qt-nodejs || true

      - name: Install deps
        run: npm install
      - name: Build
        run: npm run build

  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-18.04
    steps:
      - name: Create GH release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          tag_name: ${{github.ref_name}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  precompile:
    if: startsWith(github.ref, 'refs/tags/')
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            platform: linux
            arch: x64
          - os: windows-latest
            platform: win32
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
    runs-on: ${{ matrix.os }}
    env:
      ARCHIVE_FILENAME: nodegui-plugin-style-tweaker-binary-${{github.ref_name}}-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install ubuntu deps
        if: contains(matrix.os, 'ubuntu')
        run: sudo apt install mesa-common-dev libglu1-mesa-dev

      - name: Remove cached nodegui Qt
        if: contains(matrix.os, 'ubuntu')
        run: rm -rf ~/.cache/nodegui-mini-qt-nodejs || true

      - name: Remove cached nodegui Qt
        if: contains(matrix.os, 'macos')
        run: rm -rf /Users/runner/Library/Caches/nodegui-mini-qt-nodejs || true

      - name: Install deps
        run: npm install

      - name: Build
        run: npm run build
        env:
          CMAKE_BUILD_PARALLEL_LEVEL: 8

      - name: Compress files
        if: ${{!contains(matrix.os, 'windows')}}
        uses: a7ul/tar-action@v1.0.2
        id: compress
        with:
          command: c
          cwd: ./build/Release
          files: |
            ./nodegui_plugin_style_tweaker.node
          outPath: ${{ env.ARCHIVE_FILENAME }}

      - name: Compress files (Windows)
        if: contains(matrix.os, 'windows')
        uses: a7ul/tar-action@v1.0.2
        id: compress-windows
        with:
          command: c
          cwd: ./build/Release
          files: |
            ./nodegui_plugin_style_tweaker.node
            ./nodegui_plugin_style_tweaker.lib
            ./nodegui_plugin_style_tweaker.exp
          outPath: ${{ env.ARCHIVE_FILENAME }}

      - uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARCHIVE_FILENAME }}
          path: ${{ env.ARCHIVE_FILENAME }}

      - name: Upload release binaries
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["${{ env.ARCHIVE_FILENAME }}"]'

  release-to-npm:
    needs: precompile
    runs-on: ubuntu-18.04
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install ubuntu deps
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config build-essential
          sudo apt-get install cmake make
          sudo apt-get install mesa-common-dev libglu1-mesa-dev

      - name: Install deps
        run: npm install

      - name: Build
        run: npm run build

      - run: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' >> .npmrc

      - run: npm publish --access=public
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
